syntax = "proto3";
package recorder;

import "google/api/annotations.proto";
import "google/protobuf/empty.proto";
import "google/protobuf/timestamp.proto";
import "recorder/record.proto";
import "games/games.proto";
import "google/api/field_behavior.proto";

enum RoundStatusType {
  // 未指定
  NONE_ROUND_STATUS_TYPE_UNSPECIFIED = 0;
  // 以取消
  ROUND_STATUS_TYPE_CANCEL = 1;
  // 以結算
  ROUND_STATUS_TYPE_END = 2;
  // 未結算
  ROUND_STATUS_TYPE_NOT_END = 3;
}

message GetRequest {

  // 資源代碼
  string code = 1 [(google.api.field_behavior) = REQUIRED];
 
}

message GetCurrentRecordRequest {

  // 遊戲代碼
  string game_code = 1 [(google.api.field_behavior) = REQUIRED];
 
}

message GetRoundPlayBackRequest {

  // 資源代碼
  string code = 1 [(google.api.field_behavior) = REQUIRED];
 
  string platform = 2 [(google.api.field_behavior) = REQUIRED];

}

message ListRecordsRequest {

  // 查詢起時
  google.protobuf.Timestamp ts_from = 1;

  // 查詢終時
  google.protobuf.Timestamp ts_to = 2;

  // 遊戲類型
  optional games.GameType game_type = 3;

  // 遊戲子類型
  optional int32 game_subtype = 4;

  // 遊戲供應
  optional string supplier = 5;

  // 遊戲代碼
  optional string game_code = 6;

  // pagination next page
  optional string search_after = 8;
  
  // pagination previous page
  optional string search_before = 9;

  // 頁數 1開始，0表示未填，改為1
  int64 page = 10;

  // 每頁筆數
  int64 page_size = 11;

  RoundStatusType roundStatusType = 12;
}

// ListShiftsResponse
// 取得排班記錄列表
message ListShiftsResponse {

  // shifts
  repeated ShiftRecord shift_record = 1;

  // 總數
  int64 total = 2;
  
  // pagination next page
  string search_after = 8;

  // pagination previous page
  string search_before = 9;

}

// ListShoesRecordResponse
// 取得靴記錄列表
message ListShoesRecordResponse {

  // shoes
  repeated ShoeRecord shoe_record = 1;

  // 總數
  int64 total = 2;

  // pagination next page
  string search_after = 8;
  
  // pagination previous page
  string search_before = 9;

}

// ListRoundsRecordResponse
// 取得局記錄列表
message ListRoundsRecordResponse {

  // rounds
  repeated RoundRecord round_record = 1;

  // 總數
  int64 total = 2;

  // pagination next page
  string search_after = 8;
  
  // pagination previous page
  string search_before = 9;

}

// GetRoundPlayBackResponse
// 取得局回放記錄
message GetRoundPlayBackResponse {

  // round code
  string round_code = 1;

  // 開始時間
  google.protobuf.Timestamp ts_start = 16;
  
  // 回放url
  map<string, string> medias = 28;

}

// gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
service RecorderReadService {
  
  // 讀取班次紀錄List
  rpc ListShifts(ListRecordsRequest) returns (ListShiftsResponse){
    option (google.api.http) = {
      get: "/v1/recorder/shifts"
    };
  };

  // 讀取指定班次紀錄
  rpc GetShift(GetRequest) returns (ShiftRecord){
    option (google.api.http) = {
      get: "/v1/recorder/shifts/{code}"
    };
  };

  // 讀取目前班次紀錄
  rpc GetCurrentShift(GetCurrentRecordRequest) returns (ShiftRecord){
    option (google.api.http) = {
      get: "/v1/recorder/shifts:current"
    };
  };

  // 讀牌靴紀錄list
  rpc ListShoe(ListRecordsRequest) returns (ListShoesRecordResponse){
    option (google.api.http) = {
      get: "/v1/provider/shoes"
    };
  };

  // 讀取指定靴紀錄
  rpc GetShoe(GetRequest) returns (ShoeRecord){
    option (google.api.http) = {
      get: "/v1/recorder/shoes/{code}"
    };
  };

  // 讀取目前靴紀錄
  rpc GetCurrentShoe(GetCurrentRecordRequest) returns (ShoeRecord){
    option (google.api.http) = {
      get: "/v1/recorder/shoes:current"
    };
  };

  // 讀牌局紀錄list
  rpc ListRounds(ListRecordsRequest) returns (ListRoundsRecordResponse){
    option (google.api.http) = {
      get: "/v1/provider/rounds"
    };
  };
  
  // 讀取指定局紀錄
  rpc GetRound(GetRequest) returns (RoundRecord){
    option (google.api.http) = {
      get: "/v1/recorder/rounds/{code}"
    };
  };

  // 讀取目前局紀錄
  rpc GetCurrentRound(GetCurrentRecordRequest) returns (RoundRecord){
    option (google.api.http) = {
      get: "/v1/recorder/rounds:current"
    };
  };

  //
  rpc GetPlayBackRound(GetRoundPlayBackRequest) returns (GetRoundPlayBackResponse){
    option (google.api.http) = {
      get: "/v1/recorder/playback/{code}"
    };
  };

}

enum GameNotifyType {

  // 未指定
  GAME_NOTIFY_TYPE_UNSPECIFIED = 0;

  // 通知遊戲供應狀況改變
  NOTIFY_GAME_PROVIDE_STATE_CHANGE = 1;

  // 通知遊戲流程截圖
  NOTIFY_GAME_CAPTURE = 5;

  // 通知遊戲流程荷官登入
  NOTIFY_GAME_DEALER_LOGIN = 6;

  // 通知遊戲流程荷官登出
  NOTIFY_GAME_DEALER_LOGOUT = 7;

  // 通知遊戲流程開始換靴，更換結束呼叫 NOTIFY_SHOE_START
  NOTIFY_GAME_CHANGING_SHOE = 8;

  // 通知遊戲班開始
  NOTIFY_SHIFT_START = 9;

  // 通知遊戲班結束
  NOTIFY_SHIFT_END = 10;

  // 通知新靴開始
  NOTIFY_SHOE_START = 11;

  // 通知此靴結束
  NOTIFY_SHOE_END = 12;

  // 新局開始
  NOTIFY_ROUND_START = 13;

  // 通知遊戲局開始下注
  NOTIFY_ROUND_BET = 14;

  // 通知遊戲局結束下注
  NOTIFY_ROUND_NO_MORE_BET = 15;

  // 通知遊戲局進行步驟
  NOTIFY_ROUND_STEP = 16;

  // 遊戲局完成
  NOTIFY_ROUND_FINISH = 17;

  // 通知遊戲局取消
  NOTIFY_ROUND_CANCEL = 18;

  // 通知遊戲局回放連結
  NOTIFY_ROUND_PLAYBACK = 19;

  // 通知遊戲局事後取消
  NOTIFY_ROUND_CANCEL_AFTER_ROUND = 20;

  // 通知遊戲局事後改牌
  NOTIFY_ROUND_MODIFY_AFTER_ROUND = 21;
  
  // 通知遊戲局事後結束
  NOTIFY_ROUND_FINISH_AFTER_ROUND = 22;
}

// GameProvideState
// 遊戲供應狀態類型
enum GameProvideState {

  // 未指定
  GAME_PROVIDE_STATE_UNSPECIFIED = 0;

  // 提供
  GAME_PROVIDE_AVAILABLE = 1;

  // 此局結束後維護
  GAME_PROVIDE_MAINTEN_AFTER_ROUND = 2;

  // 維護
  GAME_PROVIDE_IN_MAINTENANCE = 3;

  // 此局結束後關閉
  GAME_PROVIDE_CLOSE_AFTER_ROUND = 4;

  // 此局結束後關閉
  GAME_PROVIDE_CLOSE = 5;

  // 此局結束後關閉
  GAME_PROVIDE_AVAILABLE_AFTER_ROUND = 6;

}

// LiveStreamParams
// 直播資訊
message LiveStreamParams {

  // 串流代碼
  string code = 1;

  // 應用
  string app = 2;
  
  // 頻道
  string channel = 3;

}

// GameProvide
// 遊戲供應
message GameProvide {

  // 遊戲供應
  string supplier = 2;

  // 遊戲類型
  string game_type = 3;

  // 遊戲子類型
  string game_subtype = 4;

  // 遊戲代碼
  string game_code = 6;

  // 標籤
  map<string, string> tags = 13;

  // 狀態
  GameProvideState state = 17;

  // 玩家入座
  map<int32, string> players = 25;

  // 玩家姓名
  map<string, string> players_name = 30;

  // 附加媒體：key: 媒體資源代碼；value: 媒體內容。
  map<string, string> medias = 28;

  // 直播參數
  map<string, LiveStreamParams> live_streams = 29;

  // 最後一局
  string last_round_code = 12;

}

message ListGamesRequest {

}

// ListGamesResponse
// 取得遊戲列表
message ListGamesResponse {
  
  // 遊戲列表
  repeated GameProvide game_provides = 1;

}

// VerifyGameRequest
// 驗證遊戲需求
message VerifyGameRequest {

  // 遊戲代碼
  string game_code = 1;

  // 驗證傳送接收的代碼
  repeated string pattern = 2;

  // 顯示名稱
  string name = 3;
  
}

// 玩家指示
message GamblerInstructionsRequest {

  // 遊戲代碼
  string game_code = 1;

  // 玩家帳號
  string player = 2;

  // 指示傳送接收的代碼  position card
  map<string, string> instrction = 3;
  
}

// Artcle
// 文章
message Article {

  // 標題
  string title = 1;

  // 副標
  string subtitle = 2;

  // 內文
  string text = 3;

  // 附加媒體：key: 媒體資源代碼；value: 媒體內容。
  map<string, string> medias = 4;

  // 子文檔
  map<string, Article> sections = 5;

}

// Dealer
// 荷官資訊
message Dealer {

  // 代碼
  string code = 1;

  // 名稱
  string name = 2;

  // 年齡
  string age = 3;

  // Tags
  map<string, string> tags = 4;

  // 介紹
  Article intro = 5;

  // 貼文
  repeated Article posts = 6;

}

message ListDealersRequest {

  // 代碼陣列
  repeated string codes = 1;

  // 開始
  int64 skip = 2;

  // 筆數 預設 100
  int64 limit = 3;

}

// ListDealersResponse
// 取得荷官列表
message ListDealersResponse {

  // 荷官資料
  repeated Dealer dealers = 1;
  
}

// 遊戲供應商需要開放出來的被動接口
// gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
service ProviderService {
  
  // 取得即時遊戲列表
  rpc ListGames(ListGamesRequest) returns (ListGamesResponse){
    option (google.api.http) = {
      get: "/v1/provider/games"
    };
  };

  // 取得單一即時遊戲資訊
  rpc GetGames(GetRequest) returns (GameProvide){
    option (google.api.http) = {
      get: "/v1/provider/games/{code}"
    };
  };

  // 驗證
  rpc VerifyGame(VerifyGameRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/provider/games/{game_code}:verify"
      body: "*"
    };
  };

  // 玩家指示
  rpc GamblerInstructions(GamblerInstructionsRequest) returns (google.protobuf.Empty){
    option (google.api.http) = {
      post: "/v1/provider/games/{game_code}:instructions"
      body: "*"
    };
  };

  // 荷官資料
  rpc ListDealers(ListDealersRequest) returns (ListDealersResponse){
    option (google.api.http) = {
      get: "/v1/provider/dealers"
    };
  };

  // 荷官資料
  rpc GetDealer(GetRequest) returns (Dealer){
    option (google.api.http) = {
      get: "/v1/provider/dealers/{code}"
    };
  };

}