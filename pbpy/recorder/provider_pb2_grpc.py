# Generated by the gRPC Python protocol compiler plugin. DO NOT EDIT!
"""Client and server classes corresponding to protobuf-defined services."""
import grpc

from google.protobuf import empty_pb2 as google_dot_protobuf_dot_empty__pb2
from recorder import provider_pb2 as recorder_dot_provider__pb2
from recorder import record_pb2 as recorder_dot_record__pb2


class RecorderReadServiceStub(object):
    """gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListShifts = channel.unary_unary(
                '/recorder.RecorderReadService/ListShifts',
                request_serializer=recorder_dot_provider__pb2.ListRecordsRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.ListShiftsResponse.FromString,
                _registered_method=True)
        self.GetShift = channel.unary_unary(
                '/recorder.RecorderReadService/GetShift',
                request_serializer=recorder_dot_provider__pb2.GetRequest.SerializeToString,
                response_deserializer=recorder_dot_record__pb2.ShiftRecord.FromString,
                _registered_method=True)
        self.GetCurrentShift = channel.unary_unary(
                '/recorder.RecorderReadService/GetCurrentShift',
                request_serializer=recorder_dot_provider__pb2.GetCurrentRecordRequest.SerializeToString,
                response_deserializer=recorder_dot_record__pb2.ShiftRecord.FromString,
                _registered_method=True)
        self.ListShoe = channel.unary_unary(
                '/recorder.RecorderReadService/ListShoe',
                request_serializer=recorder_dot_provider__pb2.ListRecordsRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.ListShoesRecordResponse.FromString,
                _registered_method=True)
        self.GetShoe = channel.unary_unary(
                '/recorder.RecorderReadService/GetShoe',
                request_serializer=recorder_dot_provider__pb2.GetRequest.SerializeToString,
                response_deserializer=recorder_dot_record__pb2.ShoeRecord.FromString,
                _registered_method=True)
        self.GetCurrentShoe = channel.unary_unary(
                '/recorder.RecorderReadService/GetCurrentShoe',
                request_serializer=recorder_dot_provider__pb2.GetCurrentRecordRequest.SerializeToString,
                response_deserializer=recorder_dot_record__pb2.ShoeRecord.FromString,
                _registered_method=True)
        self.ListRounds = channel.unary_unary(
                '/recorder.RecorderReadService/ListRounds',
                request_serializer=recorder_dot_provider__pb2.ListRecordsRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.ListRoundsRecordResponse.FromString,
                _registered_method=True)
        self.GetRound = channel.unary_unary(
                '/recorder.RecorderReadService/GetRound',
                request_serializer=recorder_dot_provider__pb2.GetRequest.SerializeToString,
                response_deserializer=recorder_dot_record__pb2.RoundRecord.FromString,
                _registered_method=True)
        self.GetCurrentRound = channel.unary_unary(
                '/recorder.RecorderReadService/GetCurrentRound',
                request_serializer=recorder_dot_provider__pb2.GetCurrentRecordRequest.SerializeToString,
                response_deserializer=recorder_dot_record__pb2.RoundRecord.FromString,
                _registered_method=True)


class RecorderReadServiceServicer(object):
    """gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
    """

    def ListShifts(self, request, context):
        """讀取班次紀錄List
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShift(self, request, context):
        """讀取指定班次紀錄
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentShift(self, request, context):
        """讀取目前班次紀錄
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListShoe(self, request, context):
        """讀牌靴紀錄list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetShoe(self, request, context):
        """讀取指定靴紀錄
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentShoe(self, request, context):
        """讀取目前靴紀錄
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListRounds(self, request, context):
        """讀牌局紀錄list
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetRound(self, request, context):
        """讀取指定局紀錄
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetCurrentRound(self, request, context):
        """讀取目前局紀錄
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_RecorderReadServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListShifts': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShifts,
                    request_deserializer=recorder_dot_provider__pb2.ListRecordsRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.ListShiftsResponse.SerializeToString,
            ),
            'GetShift': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShift,
                    request_deserializer=recorder_dot_provider__pb2.GetRequest.FromString,
                    response_serializer=recorder_dot_record__pb2.ShiftRecord.SerializeToString,
            ),
            'GetCurrentShift': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentShift,
                    request_deserializer=recorder_dot_provider__pb2.GetCurrentRecordRequest.FromString,
                    response_serializer=recorder_dot_record__pb2.ShiftRecord.SerializeToString,
            ),
            'ListShoe': grpc.unary_unary_rpc_method_handler(
                    servicer.ListShoe,
                    request_deserializer=recorder_dot_provider__pb2.ListRecordsRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.ListShoesRecordResponse.SerializeToString,
            ),
            'GetShoe': grpc.unary_unary_rpc_method_handler(
                    servicer.GetShoe,
                    request_deserializer=recorder_dot_provider__pb2.GetRequest.FromString,
                    response_serializer=recorder_dot_record__pb2.ShoeRecord.SerializeToString,
            ),
            'GetCurrentShoe': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentShoe,
                    request_deserializer=recorder_dot_provider__pb2.GetCurrentRecordRequest.FromString,
                    response_serializer=recorder_dot_record__pb2.ShoeRecord.SerializeToString,
            ),
            'ListRounds': grpc.unary_unary_rpc_method_handler(
                    servicer.ListRounds,
                    request_deserializer=recorder_dot_provider__pb2.ListRecordsRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.ListRoundsRecordResponse.SerializeToString,
            ),
            'GetRound': grpc.unary_unary_rpc_method_handler(
                    servicer.GetRound,
                    request_deserializer=recorder_dot_provider__pb2.GetRequest.FromString,
                    response_serializer=recorder_dot_record__pb2.RoundRecord.SerializeToString,
            ),
            'GetCurrentRound': grpc.unary_unary_rpc_method_handler(
                    servicer.GetCurrentRound,
                    request_deserializer=recorder_dot_provider__pb2.GetCurrentRecordRequest.FromString,
                    response_serializer=recorder_dot_record__pb2.RoundRecord.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'recorder.RecorderReadService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('recorder.RecorderReadService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class RecorderReadService(object):
    """gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
    """

    @staticmethod
    def ListShifts(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/ListShifts',
            recorder_dot_provider__pb2.ListRecordsRequest.SerializeToString,
            recorder_dot_provider__pb2.ListShiftsResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/GetShift',
            recorder_dot_provider__pb2.GetRequest.SerializeToString,
            recorder_dot_record__pb2.ShiftRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentShift(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/GetCurrentShift',
            recorder_dot_provider__pb2.GetCurrentRecordRequest.SerializeToString,
            recorder_dot_record__pb2.ShiftRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListShoe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/ListShoe',
            recorder_dot_provider__pb2.ListRecordsRequest.SerializeToString,
            recorder_dot_provider__pb2.ListShoesRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetShoe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/GetShoe',
            recorder_dot_provider__pb2.GetRequest.SerializeToString,
            recorder_dot_record__pb2.ShoeRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentShoe(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/GetCurrentShoe',
            recorder_dot_provider__pb2.GetCurrentRecordRequest.SerializeToString,
            recorder_dot_record__pb2.ShoeRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListRounds(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/ListRounds',
            recorder_dot_provider__pb2.ListRecordsRequest.SerializeToString,
            recorder_dot_provider__pb2.ListRoundsRecordResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetRound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/GetRound',
            recorder_dot_provider__pb2.GetRequest.SerializeToString,
            recorder_dot_record__pb2.RoundRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetCurrentRound(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.RecorderReadService/GetCurrentRound',
            recorder_dot_provider__pb2.GetCurrentRecordRequest.SerializeToString,
            recorder_dot_record__pb2.RoundRecord.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)


class ProviderServiceStub(object):
    """遊戲供應商需要開放出來的被動接口
    gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
    """

    def __init__(self, channel):
        """Constructor.

        Args:
            channel: A grpc.Channel.
        """
        self.ListGames = channel.unary_unary(
                '/recorder.ProviderService/ListGames',
                request_serializer=recorder_dot_provider__pb2.ListGamesRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.ListGamesResponse.FromString,
                _registered_method=True)
        self.GetGames = channel.unary_unary(
                '/recorder.ProviderService/GetGames',
                request_serializer=recorder_dot_provider__pb2.GetRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.GameProvide.FromString,
                _registered_method=True)
        self.VerifyGame = channel.unary_unary(
                '/recorder.ProviderService/VerifyGame',
                request_serializer=recorder_dot_provider__pb2.VerifyGameRequest.SerializeToString,
                response_deserializer=google_dot_protobuf_dot_empty__pb2.Empty.FromString,
                _registered_method=True)
        self.ListDealers = channel.unary_unary(
                '/recorder.ProviderService/ListDealers',
                request_serializer=recorder_dot_provider__pb2.ListDealersRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.ListDealersResponse.FromString,
                _registered_method=True)
        self.GetDealer = channel.unary_unary(
                '/recorder.ProviderService/GetDealer',
                request_serializer=recorder_dot_provider__pb2.GetRequest.SerializeToString,
                response_deserializer=recorder_dot_provider__pb2.Dealer.FromString,
                _registered_method=True)


class ProviderServiceServicer(object):
    """遊戲供應商需要開放出來的被動接口
    gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
    """

    def ListGames(self, request, context):
        """取得即時遊戲列表
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetGames(self, request, context):
        """取得單一即時遊戲資訊
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def VerifyGame(self, request, context):
        """驗證
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def ListDealers(self, request, context):
        """荷官資料
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')

    def GetDealer(self, request, context):
        """荷官資料
        """
        context.set_code(grpc.StatusCode.UNIMPLEMENTED)
        context.set_details('Method not implemented!')
        raise NotImplementedError('Method not implemented!')


def add_ProviderServiceServicer_to_server(servicer, server):
    rpc_method_handlers = {
            'ListGames': grpc.unary_unary_rpc_method_handler(
                    servicer.ListGames,
                    request_deserializer=recorder_dot_provider__pb2.ListGamesRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.ListGamesResponse.SerializeToString,
            ),
            'GetGames': grpc.unary_unary_rpc_method_handler(
                    servicer.GetGames,
                    request_deserializer=recorder_dot_provider__pb2.GetRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.GameProvide.SerializeToString,
            ),
            'VerifyGame': grpc.unary_unary_rpc_method_handler(
                    servicer.VerifyGame,
                    request_deserializer=recorder_dot_provider__pb2.VerifyGameRequest.FromString,
                    response_serializer=google_dot_protobuf_dot_empty__pb2.Empty.SerializeToString,
            ),
            'ListDealers': grpc.unary_unary_rpc_method_handler(
                    servicer.ListDealers,
                    request_deserializer=recorder_dot_provider__pb2.ListDealersRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.ListDealersResponse.SerializeToString,
            ),
            'GetDealer': grpc.unary_unary_rpc_method_handler(
                    servicer.GetDealer,
                    request_deserializer=recorder_dot_provider__pb2.GetRequest.FromString,
                    response_serializer=recorder_dot_provider__pb2.Dealer.SerializeToString,
            ),
    }
    generic_handler = grpc.method_handlers_generic_handler(
            'recorder.ProviderService', rpc_method_handlers)
    server.add_generic_rpc_handlers((generic_handler,))
    server.add_registered_method_handlers('recorder.ProviderService', rpc_method_handlers)


 # This class is part of an EXPERIMENTAL API.
class ProviderService(object):
    """遊戲供應商需要開放出來的被動接口
    gateway option 設定說明參照：https://github.com/googleapis/googleapis/blob/master/google/api/http.proto
    """

    @staticmethod
    def ListGames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.ProviderService/ListGames',
            recorder_dot_provider__pb2.ListGamesRequest.SerializeToString,
            recorder_dot_provider__pb2.ListGamesResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetGames(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.ProviderService/GetGames',
            recorder_dot_provider__pb2.GetRequest.SerializeToString,
            recorder_dot_provider__pb2.GameProvide.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def VerifyGame(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.ProviderService/VerifyGame',
            recorder_dot_provider__pb2.VerifyGameRequest.SerializeToString,
            google_dot_protobuf_dot_empty__pb2.Empty.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def ListDealers(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.ProviderService/ListDealers',
            recorder_dot_provider__pb2.ListDealersRequest.SerializeToString,
            recorder_dot_provider__pb2.ListDealersResponse.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)

    @staticmethod
    def GetDealer(request,
            target,
            options=(),
            channel_credentials=None,
            call_credentials=None,
            insecure=False,
            compression=None,
            wait_for_ready=None,
            timeout=None,
            metadata=None):
        return grpc.experimental.unary_unary(
            request,
            target,
            '/recorder.ProviderService/GetDealer',
            recorder_dot_provider__pb2.GetRequest.SerializeToString,
            recorder_dot_provider__pb2.Dealer.FromString,
            options,
            channel_credentials,
            insecure,
            call_credentials,
            compression,
            wait_for_ready,
            timeout,
            metadata,
            _registered_method=True)
