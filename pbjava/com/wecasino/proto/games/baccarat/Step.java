// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: games/baccarat/record.proto

// Protobuf Java Version: 3.25.3
package com.wecasino.proto.games.baccarat;

/**
 * <pre>
 * 步驟，依據遊戲供應商邏輯，不是每個步驟都會走到
 * </pre>
 *
 * Protobuf enum {@code games.baccarat.Step}
 */
public enum Step
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未指定
   * </pre>
   *
   * <code>STEP_UNSPECIFIED = 0;</code>
   */
  STEP_UNSPECIFIED(0),
  /**
   * <pre>
   * 本局開始
   * </pre>
   *
   * <code>ROUND_START = 1;</code>
   */
  ROUND_START(1),
  /**
   * <pre>
   * 本局完成
   * </pre>
   *
   * <code>ROUND_FINISHED = 2;</code>
   */
  ROUND_FINISHED(2),
  /**
   * <pre>
   * 展示第一張牌
   * </pre>
   *
   * <code>SHOW_FIRST_CARD = 3;</code>
   */
  SHOW_FIRST_CARD(3),
  /**
   * <pre>
   * 派發閒家例牌1
   * </pre>
   *
   * <code>DEAL_PLAYER_1 = 4;</code>
   */
  DEAL_PLAYER_1(4),
  /**
   * <pre>
   * 派發莊家例牌1
   * </pre>
   *
   * <code>DEAL_BANKER_1 = 5;</code>
   */
  DEAL_BANKER_1(5),
  /**
   * <pre>
   * 派發閒家例牌2
   * </pre>
   *
   * <code>DEAL_PLAYER_2 = 6;</code>
   */
  DEAL_PLAYER_2(6),
  /**
   * <pre>
   * 派發莊家例牌2
   * </pre>
   *
   * <code>DEAL_BANKER_2 = 7;</code>
   */
  DEAL_BANKER_2(7),
  /**
   * <pre>
   * 開放下注
   * </pre>
   *
   * <code>ROUND_BET = 8;</code>
   */
  ROUND_BET(8),
  /**
   * <pre>
   * 停止下注
   * </pre>
   *
   * <code>NO_MORE_BET = 9;</code>
   */
  NO_MORE_BET(9),
  /**
   * <pre>
   * 非瞇牌開例牌
   * </pre>
   *
   * <code>SHOW_NORMAL = 11;</code>
   */
  SHOW_NORMAL(11),
  /**
   * <pre>
   * 開 莊牌
   * </pre>
   *
   * <code>SHOW_BANKER = 12;</code>
   */
  SHOW_BANKER(12),
  /**
   * <pre>
   * 開 閒牌
   * </pre>
   *
   * <code>SHOW_PLAYER = 13;</code>
   */
  SHOW_PLAYER(13),
  /**
   * <pre>
   * 瞇牌例牌
   * </pre>
   *
   * <code>PEEK_NORMAL = 14;</code>
   */
  PEEK_NORMAL(14),
  /**
   * <pre>
   * 瞇牌公布例牌
   * </pre>
   *
   * <code>PEEK_SHOW_NORMAL = 15;</code>
   */
  PEEK_SHOW_NORMAL(15),
  /**
   * <pre>
   * 非瞇牌補閒家牌
   * </pre>
   *
   * <code>DEAL_PLAYER_EXTRA = 16;</code>
   */
  DEAL_PLAYER_EXTRA(16),
  /**
   * <pre>
   * 瞇牌閒家補牌
   * </pre>
   *
   * <code>PEEK_DEAL_PLAYER_EXTRA = 17;</code>
   */
  PEEK_DEAL_PLAYER_EXTRA(17),
  /**
   * <pre>
   * 瞇牌公布閒家補牌
   * </pre>
   *
   * <code>PEEK_SHOW_PLAYER_EXTRA = 18;</code>
   */
  PEEK_SHOW_PLAYER_EXTRA(18),
  /**
   * <pre>
   * 非瞇牌補莊家牌
   * </pre>
   *
   * <code>DEAL_BANKER_EXTRA = 20;</code>
   */
  DEAL_BANKER_EXTRA(20),
  /**
   * <pre>
   * 瞇牌莊家補牌
   * </pre>
   *
   * <code>PEEK_DEAL_BANKER_EXTRA = 21;</code>
   */
  PEEK_DEAL_BANKER_EXTRA(21),
  /**
   * <pre>
   * 瞇牌公布莊家補牌
   * </pre>
   *
   * <code>PEEK_SHOW_BANKER_EXTRA = 22;</code>
   */
  PEEK_SHOW_BANKER_EXTRA(22),
  /**
   * <code>DEALER_CONFIRM = 23;</code>
   */
  DEALER_CONFIRM(23),
  /**
   * <pre>
   * PITBOSS 修改派發例牌
   * </pre>
   *
   * <code>PITBOSS_MODIFY_NORMAL = 24;</code>
   */
  PITBOSS_MODIFY_NORMAL(24),
  /**
   * <pre>
   * PITBOSS 修改派發閒家補牌
   * </pre>
   *
   * <code>PITBOSS_MODIFY_PLAYER_EXTRA = 25;</code>
   */
  PITBOSS_MODIFY_PLAYER_EXTRA(25),
  /**
   * <pre>
   * PITBOSS 修改派發莊家補牌
   * </pre>
   *
   * <code>PITBOSS_MODIFY_BANKER_EXTRA = 26;</code>
   */
  PITBOSS_MODIFY_BANKER_EXTRA(26),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 未指定
   * </pre>
   *
   * <code>STEP_UNSPECIFIED = 0;</code>
   */
  public static final int STEP_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * 本局開始
   * </pre>
   *
   * <code>ROUND_START = 1;</code>
   */
  public static final int ROUND_START_VALUE = 1;
  /**
   * <pre>
   * 本局完成
   * </pre>
   *
   * <code>ROUND_FINISHED = 2;</code>
   */
  public static final int ROUND_FINISHED_VALUE = 2;
  /**
   * <pre>
   * 展示第一張牌
   * </pre>
   *
   * <code>SHOW_FIRST_CARD = 3;</code>
   */
  public static final int SHOW_FIRST_CARD_VALUE = 3;
  /**
   * <pre>
   * 派發閒家例牌1
   * </pre>
   *
   * <code>DEAL_PLAYER_1 = 4;</code>
   */
  public static final int DEAL_PLAYER_1_VALUE = 4;
  /**
   * <pre>
   * 派發莊家例牌1
   * </pre>
   *
   * <code>DEAL_BANKER_1 = 5;</code>
   */
  public static final int DEAL_BANKER_1_VALUE = 5;
  /**
   * <pre>
   * 派發閒家例牌2
   * </pre>
   *
   * <code>DEAL_PLAYER_2 = 6;</code>
   */
  public static final int DEAL_PLAYER_2_VALUE = 6;
  /**
   * <pre>
   * 派發莊家例牌2
   * </pre>
   *
   * <code>DEAL_BANKER_2 = 7;</code>
   */
  public static final int DEAL_BANKER_2_VALUE = 7;
  /**
   * <pre>
   * 開放下注
   * </pre>
   *
   * <code>ROUND_BET = 8;</code>
   */
  public static final int ROUND_BET_VALUE = 8;
  /**
   * <pre>
   * 停止下注
   * </pre>
   *
   * <code>NO_MORE_BET = 9;</code>
   */
  public static final int NO_MORE_BET_VALUE = 9;
  /**
   * <pre>
   * 非瞇牌開例牌
   * </pre>
   *
   * <code>SHOW_NORMAL = 11;</code>
   */
  public static final int SHOW_NORMAL_VALUE = 11;
  /**
   * <pre>
   * 開 莊牌
   * </pre>
   *
   * <code>SHOW_BANKER = 12;</code>
   */
  public static final int SHOW_BANKER_VALUE = 12;
  /**
   * <pre>
   * 開 閒牌
   * </pre>
   *
   * <code>SHOW_PLAYER = 13;</code>
   */
  public static final int SHOW_PLAYER_VALUE = 13;
  /**
   * <pre>
   * 瞇牌例牌
   * </pre>
   *
   * <code>PEEK_NORMAL = 14;</code>
   */
  public static final int PEEK_NORMAL_VALUE = 14;
  /**
   * <pre>
   * 瞇牌公布例牌
   * </pre>
   *
   * <code>PEEK_SHOW_NORMAL = 15;</code>
   */
  public static final int PEEK_SHOW_NORMAL_VALUE = 15;
  /**
   * <pre>
   * 非瞇牌補閒家牌
   * </pre>
   *
   * <code>DEAL_PLAYER_EXTRA = 16;</code>
   */
  public static final int DEAL_PLAYER_EXTRA_VALUE = 16;
  /**
   * <pre>
   * 瞇牌閒家補牌
   * </pre>
   *
   * <code>PEEK_DEAL_PLAYER_EXTRA = 17;</code>
   */
  public static final int PEEK_DEAL_PLAYER_EXTRA_VALUE = 17;
  /**
   * <pre>
   * 瞇牌公布閒家補牌
   * </pre>
   *
   * <code>PEEK_SHOW_PLAYER_EXTRA = 18;</code>
   */
  public static final int PEEK_SHOW_PLAYER_EXTRA_VALUE = 18;
  /**
   * <pre>
   * 非瞇牌補莊家牌
   * </pre>
   *
   * <code>DEAL_BANKER_EXTRA = 20;</code>
   */
  public static final int DEAL_BANKER_EXTRA_VALUE = 20;
  /**
   * <pre>
   * 瞇牌莊家補牌
   * </pre>
   *
   * <code>PEEK_DEAL_BANKER_EXTRA = 21;</code>
   */
  public static final int PEEK_DEAL_BANKER_EXTRA_VALUE = 21;
  /**
   * <pre>
   * 瞇牌公布莊家補牌
   * </pre>
   *
   * <code>PEEK_SHOW_BANKER_EXTRA = 22;</code>
   */
  public static final int PEEK_SHOW_BANKER_EXTRA_VALUE = 22;
  /**
   * <code>DEALER_CONFIRM = 23;</code>
   */
  public static final int DEALER_CONFIRM_VALUE = 23;
  /**
   * <pre>
   * PITBOSS 修改派發例牌
   * </pre>
   *
   * <code>PITBOSS_MODIFY_NORMAL = 24;</code>
   */
  public static final int PITBOSS_MODIFY_NORMAL_VALUE = 24;
  /**
   * <pre>
   * PITBOSS 修改派發閒家補牌
   * </pre>
   *
   * <code>PITBOSS_MODIFY_PLAYER_EXTRA = 25;</code>
   */
  public static final int PITBOSS_MODIFY_PLAYER_EXTRA_VALUE = 25;
  /**
   * <pre>
   * PITBOSS 修改派發莊家補牌
   * </pre>
   *
   * <code>PITBOSS_MODIFY_BANKER_EXTRA = 26;</code>
   */
  public static final int PITBOSS_MODIFY_BANKER_EXTRA_VALUE = 26;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static Step valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static Step forNumber(int value) {
    switch (value) {
      case 0: return STEP_UNSPECIFIED;
      case 1: return ROUND_START;
      case 2: return ROUND_FINISHED;
      case 3: return SHOW_FIRST_CARD;
      case 4: return DEAL_PLAYER_1;
      case 5: return DEAL_BANKER_1;
      case 6: return DEAL_PLAYER_2;
      case 7: return DEAL_BANKER_2;
      case 8: return ROUND_BET;
      case 9: return NO_MORE_BET;
      case 11: return SHOW_NORMAL;
      case 12: return SHOW_BANKER;
      case 13: return SHOW_PLAYER;
      case 14: return PEEK_NORMAL;
      case 15: return PEEK_SHOW_NORMAL;
      case 16: return DEAL_PLAYER_EXTRA;
      case 17: return PEEK_DEAL_PLAYER_EXTRA;
      case 18: return PEEK_SHOW_PLAYER_EXTRA;
      case 20: return DEAL_BANKER_EXTRA;
      case 21: return PEEK_DEAL_BANKER_EXTRA;
      case 22: return PEEK_SHOW_BANKER_EXTRA;
      case 23: return DEALER_CONFIRM;
      case 24: return PITBOSS_MODIFY_NORMAL;
      case 25: return PITBOSS_MODIFY_PLAYER_EXTRA;
      case 26: return PITBOSS_MODIFY_BANKER_EXTRA;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<Step>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      Step> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<Step>() {
          public Step findValueByNumber(int number) {
            return Step.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.wecasino.proto.games.baccarat.RecordProto.getDescriptor().getEnumTypes().get(2);
  }

  private static final Step[] VALUES = values();

  public static Step valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private Step(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:games.baccarat.Step)
}

