// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: games/games.proto

// Protobuf Java Version: 3.25.3
package com.wecasino.proto.games;

/**
 * Protobuf enum {@code games.FlowSeat}
 */
public enum FlowSeat
    implements com.google.protobuf.ProtocolMessageEnum {
  /**
   * <pre>
   * 未指定
   * </pre>
   *
   * <code>SEAT_UNSPECIFIED = 0;</code>
   */
  SEAT_UNSPECIFIED(0),
  /**
   * <pre>
   * Dealer
   * </pre>
   *
   * <code>DEALER = 64;</code>
   */
  DEALER(64),
  /**
   * <pre>
   * 上一位 Dealer 
   * </pre>
   *
   * <code>PREVIOUS_DEALER = 65;</code>
   */
  PREVIOUS_DEALER(65),
  /**
   * <pre>
   * Pitboss
   * </pre>
   *
   * <code>PITBOSS = 66;</code>
   */
  PITBOSS(66),
  /**
   * <pre>
   * 上一位 PITBOSS
   * </pre>
   *
   * <code>PREVIOUS_PITBOSS = 67;</code>
   */
  PREVIOUS_PITBOSS(67),
  /**
   * <pre>
   * 玩家
   * </pre>
   *
   * <code>PLAYER = 68;</code>
   */
  PLAYER(68),
  /**
   * <pre>
   * 莊家
   * </pre>
   *
   * <code>BANKER = 69;</code>
   */
  BANKER(69),
  /**
   * <pre>
   * 左方
   * </pre>
   *
   * <code>LEFT = 70;</code>
   */
  LEFT(70),
  /**
   * <pre>
   * 右方
   * </pre>
   *
   * <code>RIGHT = 71;</code>
   */
  RIGHT(71),
  /**
   * <pre>
   * 流程控制牌
   * </pre>
   *
   * <code>CONTROL = 96;</code>
   */
  CONTROL(96),
  UNRECOGNIZED(-1),
  ;

  /**
   * <pre>
   * 未指定
   * </pre>
   *
   * <code>SEAT_UNSPECIFIED = 0;</code>
   */
  public static final int SEAT_UNSPECIFIED_VALUE = 0;
  /**
   * <pre>
   * Dealer
   * </pre>
   *
   * <code>DEALER = 64;</code>
   */
  public static final int DEALER_VALUE = 64;
  /**
   * <pre>
   * 上一位 Dealer 
   * </pre>
   *
   * <code>PREVIOUS_DEALER = 65;</code>
   */
  public static final int PREVIOUS_DEALER_VALUE = 65;
  /**
   * <pre>
   * Pitboss
   * </pre>
   *
   * <code>PITBOSS = 66;</code>
   */
  public static final int PITBOSS_VALUE = 66;
  /**
   * <pre>
   * 上一位 PITBOSS
   * </pre>
   *
   * <code>PREVIOUS_PITBOSS = 67;</code>
   */
  public static final int PREVIOUS_PITBOSS_VALUE = 67;
  /**
   * <pre>
   * 玩家
   * </pre>
   *
   * <code>PLAYER = 68;</code>
   */
  public static final int PLAYER_VALUE = 68;
  /**
   * <pre>
   * 莊家
   * </pre>
   *
   * <code>BANKER = 69;</code>
   */
  public static final int BANKER_VALUE = 69;
  /**
   * <pre>
   * 左方
   * </pre>
   *
   * <code>LEFT = 70;</code>
   */
  public static final int LEFT_VALUE = 70;
  /**
   * <pre>
   * 右方
   * </pre>
   *
   * <code>RIGHT = 71;</code>
   */
  public static final int RIGHT_VALUE = 71;
  /**
   * <pre>
   * 流程控制牌
   * </pre>
   *
   * <code>CONTROL = 96;</code>
   */
  public static final int CONTROL_VALUE = 96;


  public final int getNumber() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalArgumentException(
          "Can't get the number of an unknown enum value.");
    }
    return value;
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   * @deprecated Use {@link #forNumber(int)} instead.
   */
  @java.lang.Deprecated
  public static FlowSeat valueOf(int value) {
    return forNumber(value);
  }

  /**
   * @param value The numeric wire value of the corresponding enum entry.
   * @return The enum associated with the given numeric wire value.
   */
  public static FlowSeat forNumber(int value) {
    switch (value) {
      case 0: return SEAT_UNSPECIFIED;
      case 64: return DEALER;
      case 65: return PREVIOUS_DEALER;
      case 66: return PITBOSS;
      case 67: return PREVIOUS_PITBOSS;
      case 68: return PLAYER;
      case 69: return BANKER;
      case 70: return LEFT;
      case 71: return RIGHT;
      case 96: return CONTROL;
      default: return null;
    }
  }

  public static com.google.protobuf.Internal.EnumLiteMap<FlowSeat>
      internalGetValueMap() {
    return internalValueMap;
  }
  private static final com.google.protobuf.Internal.EnumLiteMap<
      FlowSeat> internalValueMap =
        new com.google.protobuf.Internal.EnumLiteMap<FlowSeat>() {
          public FlowSeat findValueByNumber(int number) {
            return FlowSeat.forNumber(number);
          }
        };

  public final com.google.protobuf.Descriptors.EnumValueDescriptor
      getValueDescriptor() {
    if (this == UNRECOGNIZED) {
      throw new java.lang.IllegalStateException(
          "Can't get the descriptor of an unrecognized enum value.");
    }
    return getDescriptor().getValues().get(ordinal());
  }
  public final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptorForType() {
    return getDescriptor();
  }
  public static final com.google.protobuf.Descriptors.EnumDescriptor
      getDescriptor() {
    return com.wecasino.proto.games.GamesProto.getDescriptor().getEnumTypes().get(1);
  }

  private static final FlowSeat[] VALUES = values();

  public static FlowSeat valueOf(
      com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
    if (desc.getType() != getDescriptor()) {
      throw new java.lang.IllegalArgumentException(
        "EnumValueDescriptor is not for this type.");
    }
    if (desc.getIndex() == -1) {
      return UNRECOGNIZED;
    }
    return VALUES[desc.getIndex()];
  }

  private final int value;

  private FlowSeat(int value) {
    this.value = value;
  }

  // @@protoc_insertion_point(enum_scope:games.FlowSeat)
}

